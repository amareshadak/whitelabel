@using NonFactors.Mvc.Grid;
@using WHITELABEL.Web.Helper;
@model IEnumerable<WHITELABEL.Data.Models.TBL_CREDIT_LIMIT_BALANCE_DISTRIBUTION>
@{
    ViewBag.Title = "";
    //Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    Layout = null;
}


@(Html
                                            .Grid(Model)
                                            .Build(columns =>
                                            {
                                                columns.Add(model => model.SLN).Titled("Sln").Filterable(true).Sortable(true);
                                                columns.Add(model => model.TOUser).Titled("To User").Filterable(true).Sortable(true);
                                                columns.Add(model => model.FromUser).Titled("Member Name ").Filterable(true).Sortable(true);
                                                columns.Add(model => model.CREDIT_AMOUNT).Titled("Credit Balance Amount").Filterable(true).Sortable(true);
                                                //columns.Add(model => model.CREDIT_OPENING).Titled("Credit Opening").Filterable(true).Sortable(true);
                                                //columns.Add(model => model.CR_Col).Titled("CR");
                                                //columns.Add(model => model.DR_Col).Titled("DR");
                                                //columns.Add(model => model.CREDITCLOSING).Titled("Credit Closing").Filterable(true).Sortable(true);
                                                columns.Add(model => model.CREDIT_DATE).Titled("Credit Balance Date").Formatted("{0:MM/dd/yyyy}").Filterable(true).Sortable(true);
                                                columns.Add(model => model.CREDIT_DATE).Titled("Credit Balance Time").Formatted("{0:T}").Filterable(false);
                                                columns.Add(model => model.CREDIT_NOTE_DESCRIPTION).Titled("Credit Balance Note").Filterable(true).Sortable(true);
                                                //columns.Add(model => model.CREDIT_STATUS == true ? "Approved" : "Pending").Titled("Credit Balance Note").Filterable(true).Sortable(true);
                                                columns.Add(model => model.STATUS).Titled("Credit Status").Filterable(true).Sortable(true);
                                                columns.Add(model => model.SLN).Titled("Action").Encoded(false).Filterable(false).Sortable(false)
                        .RenderedAs(model => "<a class='btn btn-primary btn-xs' data-toggle='modal' data-target='.MerchantCreditRequisitiontransd' id='MerchantCreditRequisitionid' data-id=" + model.SLN + " onclick='getMerchantCreditRequisitionvalue(" + model.SLN + ");'>Approve</a>");
                                            })
                                .Css("css-classes")
                                .AppendCss("table table-striped")
                                            .Empty("No data found")
                                            .Id("my-ajax-grid")
                                            .Pageable(pager =>
                                            {
                                                pager.PagesToDisplay = 25;
                                                pager.RowsPerPage = 25;
                                            })
                                            .Filterable()
                                            .Sortable()
)




