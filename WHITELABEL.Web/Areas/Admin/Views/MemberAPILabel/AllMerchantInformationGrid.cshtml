@using NonFactors.Mvc.Grid;
@using WHITELABEL.Web.Helper;
@model IEnumerable<WHITELABEL.Data.Models.TBL_MASTER_MEMBER>
@{
    //ViewBag.Title = "AllMerchantInformationGrid";
    //Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    Layout = null;
}


@(Html
                                            .Grid(Model)
                                            .Build(columns =>
                                            {
                                                columns.Add(model => model.MEM_ID).Encoded(false).Filterable(false).Sortable(false).Titled("Emulate")
                                           .RenderedAs(model => "<div>&nbsp;<a href='" + @Url.Action("EmulateMerchant", "MemberLoginDetails", new { area = "Admin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' target='_blank' Title='Emulate' class='btn btn-primary' style='margin-right:10px;'>Emulate</a></div>");
                                                columns.Add(model => model.MEM_UNIQUE_ID).Titled("Mem ID").Filterable(true).Sortable(true);
                                                columns.Add(model => model.EMAIL_ID).Titled("Email").Filterable(true).Sortable(true);
                                                columns.Add(model => model.MEMBER_NAME).Titled("Name").Filterable(true).Sortable(true);
                                                columns.Add(model => model.MEMBER_MOBILE).Titled("Mobile No").Filterable(true).Sortable(true);
                                                columns.Add(model => model.CITY).Titled("City").Filterable(true).Sortable(true);
                                                columns.Add(model => model.COMPANY).Titled("Company").Filterable(true).Sortable(true);
                                                columns.Add(model => model.COMPANY_GST_NO).Titled("GST No").Filterable(true).Sortable(true);
                                                columns.Add(model => model.BALANCE).Titled("Balance").Filterable(true).Sortable(true);
                                                columns.Add(model => model.CREDIT_LIMIT).Titled("Credit Limit").Filterable(true).Sortable(true);
                                                columns.Add(model => model.RESERVED_CREDIT_LIMIT).Titled("Reserved Credit Limit").Filterable(true).Sortable(true);
                                                columns.Add(model => model.MEM_ID).Titled("").Encoded(false).Filterable(false).Sortable(false).Titled("Password")
                                 .RenderedAs(model => "<div style='text-align:center'><a href='javascript:void(0)' onclick='SendMailToMember(" + model.MEM_ID + ");return 0;' title='Password'  style='margin-right:10px;'><i class='fa fa-key'></i></a> <a href='javascript:void(0);' onclick='GetPassword(" + model.MEM_ID + ");'><i class='fa fa-eye'></i></a> </div>");
                                                //columns.Add(model => model.SECURITY_PIN_MD5).Titled("M Pin").Filterable(true).Sortable(true);
                                                columns.Add(model => model.MEM_ID).Encoded(false).Filterable(false).Sortable(false).Titled("Edit")
                                           .RenderedAs(model => "<div>&nbsp;<a href='" + @Url.Action("EditMerchant", "MemberAPILabel", new { area = "Admin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' Title='Edit' style='margin-right:10px;'><i class='fa fa-edit'></i></a></div>");
                                                columns.Add(model => model.MEM_ID).Encoded(false).Filterable(false).Sortable(false).Titled("Action")
                                   .RenderedAs(model => "<a href='javascript:void(0)' onclick='MemberStatus(\"" + model.MEM_ID + "\",\"" + model.ACTIVE_MEMBER + "\");return 0;' title='" + (model.ACTIVE_MEMBER == true ? "Active" : "Deactive") + "'>" + (model.ACTIVE_MEMBER == true ? "<span style='color:green;'><i class='fa fa-toggle-on fa-2x'></i></span>" : "<span style='color:red;'><i class='fa fa-toggle-off fa-2x'></i></span>") + "</a>");
                                            })
                                             .Css("css-classes")
                                        .AppendCss("table table-striped")
                                            .Empty("No data found")
                                            .Id("my-ajax-grid")
                                            .Pageable(pager =>
                                            {
                                                pager.PagesToDisplay = 35;
                                                pager.RowsPerPage = 35;
                                            })
                                            .Filterable()
                                            .Sortable()
)


